<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kevin.onlinetest.mapper.QuestionMapper">
  <resultMap id="BaseResultMap" type="com.kevin.onlinetest.pojo.Question">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="teacherId" jdbcType="INTEGER" property="teacherId" />
    <result column="typeId" jdbcType="BOOLEAN" property="typeId" />
    <result column="refAnswer" jdbcType="VARCHAR" property="refAnswer" />
    <result column="courseId" jdbcType="INTEGER" property="courseId" />
  </resultMap>
  <resultMap id="OptionMap" type="com.kevin.onlinetest.pojo.Option">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="content" jdbcType="VARCHAR" property="content"/>
    <result column="questionId" jdbcType="INTEGER" property="questionId"/>
    <result column="truth" jdbcType="BOOLEAN" property="truth"/>
  </resultMap>
  <resultMap id="QuestionWithFullInfo" type="com.kevin.onlinetest.pojo.Question" extends="BaseResultMap">
    <association property="type" javaType="com.kevin.onlinetest.pojo.Type">
      <result column="type_id" property="id" jdbcType="VARCHAR"/>
      <result column="type_name" property="name" jdbcType="VARCHAR"/>
    </association>
    <association property="course" javaType="com.kevin.onlinetest.pojo.Course">
      <result column="course_id" property="id" jdbcType="VARCHAR"/>
      <result column="course_name" property="name" jdbcType="VARCHAR"/>
    </association>
    <association property="teacher" javaType="com.kevin.onlinetest.pojo.Teacher">
      <result column="teacher_id" property="id"/>
      <result column="teacher_name" property="name"/>
      <result column="teacherNum" property="teacherNum"/>
    </association>
    <collection property="optionList" ofType="com.kevin.onlinetest.pojo.Option"
                column="{questionId=id}" select="getOptions">
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, title, content, teacherId, typeId, refAnswer, courseId
  </sql>
  <sql id="Option_Column_List">
    id, content, questionId, truth
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="QuestionWithFullInfo">
    select
    q.* , t.id type_id, t.name type_name, c.id course_id, c.name course_name, r.id teacher_id, r.name teacher_name, r.teacherNum
    from question q, type t, course c, teacher r
    where q.id = #{id} and q.typeId = t.id and q.courseId = c.id and q.teacherId = r.id
  </select>
<!--  <select id="list" resultMap="QuestionWithFullInfo">-->
<!--    select-->
<!--    q.* , t.id type_id, t.name type_name, c.id course_id, c.name course_name,o.id option_id, o.content option_content, o.questionId, o.truth-->
<!--    from question q, type t, course c, `option` o-->
<!--    where q.typeId = t.id and q.courseId = c.id and q.id = o.questionId-->
<!--  </select>-->
  <select id="getOptions" resultMap="OptionMap">
    select * from `option` where questionId =  #{questionId}
  </select>

  <select id="list" resultMap="QuestionWithFullInfo">
    select
      q.* , t.id type_id, t.name type_name, c.id course_id, c.name course_name, r.id teacher_id, r.name teacher_name, r.teacherNum
    from question q, type t, course c, teacher r
    where q.typeId = t.id and q.courseId = c.id and q.teacherId = r.id
  </select>
  <select id="listQuestionsByTeacherId" resultMap="QuestionWithFullInfo">
    select
      q.* , t.id type_id, t.name type_name, c.id course_id, c.name course_name, r.id teacher_id, r.name teacher_name, r.teacherNum
    from question q, type t, course c, teacher r
    where q.teacherId = #{teacherId} and q.typeId = t.id and q.courseId = c.id and q.teacherId = r.id
  </select>
  <select id="listQuestionsByCoursesId" resultMap="QuestionWithFullInfo">
    select
      q.* , t.id type_id, t.name type_name, c.id course_id, c.name course_name, r.id teacher_id, r.name teacher_name, r.teacherNum
    from question q, type t, course c, teacher r
    where q.courseId = #{courseId} and q.typeId = t.id and q.courseId = c.id and q.teacherId = r.id
    order by rand()
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.kevin.onlinetest.pojo.Question" useGeneratedKeys="true">
    insert into question (title, content, teacherId, 
      typeId, refAnswer, courseId
      )
    values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}, 
      #{typeId,jdbcType=BOOLEAN}, #{refAnswer,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.kevin.onlinetest.pojo.Question" useGeneratedKeys="true">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="teacherId != null">
        teacherId,
      </if>
      <if test="typeId != null">
        typeId,
      </if>
      <if test="refAnswer != null">
        refAnswer,
      </if>
      <if test="courseId != null">
        courseId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BOOLEAN},
      </if>
      <if test="refAnswer != null">
        #{refAnswer,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kevin.onlinetest.pojo.Question">
    update question
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacherId = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        typeId = #{typeId,jdbcType=BOOLEAN},
      </if>
      <if test="refAnswer != null">
        refAnswer = #{refAnswer,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        courseId = #{courseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kevin.onlinetest.pojo.Question">
    update question
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      teacherId = #{teacherId,jdbcType=INTEGER},
      typeId = #{typeId,jdbcType=BOOLEAN},
      refAnswer = #{refAnswer,jdbcType=VARCHAR},
      courseId = #{courseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>